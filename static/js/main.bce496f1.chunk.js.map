{"version":3,"sources":["components/Navbar.js","components/Alert.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","HTMLFor","Alert","alert","class","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","TextForm","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","style","backgroundColor","color","rows","newtext1","showalert","newtext2","textarr","split","text4","i","length","elementtext","text1","text2","defaultProps","abouttext","App","setmode","_useState3","_useState4","setalert","messsage","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.bce496f1.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <a className=\"nav-link\" href=\"/about\">{props.abouttext}</a>  */}\r\n                {/* <Link className=\"nav-link\" to=\"/about\">{props.abouttext}</Link> */}\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light'? 'dark':'light' }`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label className=\"form-check-label\" HTMLFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  abouttext: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n  abouttext: \"About\"\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize =(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div class=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const  [text, setText] = useState(\"\");\r\n\r\n    const handleUpClick = ()=>{\r\n        let newtext1 = text.toUpperCase();\r\n        setText(newtext1);\r\n        props.showalert(\"Your text is converted into uppercase.\",\"success\");\r\n    }\r\n\r\n    const handleLowerClick = ()=>{\r\n        let newtext2 = text.toLowerCase();\r\n        setText(newtext2);\r\n        props.showalert(\"Your text is converted into lowercase.\",\"success\");\r\n    }\r\n\r\n    const tOGGLEcase = ()=>{\r\n        let textarr = text.split(\" \");\r\n        var text4 = (\"\");\r\n        for (let i = 0; i < textarr.length; i++) {\r\n            const elementtext = textarr[i];\r\n            let text1 = elementtext.slice(0,1);\r\n            let text2 = elementtext.slice(1,elementtext.length);\r\n            let text3 = (text1.toLowerCase() + text2.toUpperCase());\r\n            text4 = (text4 + \" \" + text3);\r\n        }\r\n        setText(text4);\r\n        props.showalert(\"Your text is converted into tOGGLEcase.\",\"success\");\r\n    }\r\n\r\n    const Cleartext = ()=>{\r\n        let newtext4 = \"\";\r\n        setText(newtext4);\r\n        props.showalert(\"Clear text\",\"success\");\r\n    }\r\n    \r\n    const handleUpChange = (event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    \r\n\r\n    return (\r\n        <>\r\n        <div className='container my-3'>\r\n            <h3 className= {`my-3 text-${props.mode === 'light' ? 'dark':'light'}`}>{props.heading}</h3>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleUpChange} style={{backgroundColor : props.mode === 'light'? 'white':'grey', color: props.mode === 'light'? 'black':'white'}} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLowerClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={tOGGLEcase}>Convert text into tOGGLEcase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={Cleartext}>Clear text</button>\r\n        </div>\r\n        <div className={`container my-3 text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n            <h2 className='my-3'>Your text summary</h2>\r\n            <p>{text.split(\" \").length - 1} words and {text.length} characters are in your text</p>\r\n            <p>You will tack {0.008 * text.split(\" \").length} minutes to read this text</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React,{ useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport Alert from './components/Alert';\nimport TextForm from './components/TextForm';\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');//Whether dark mode is enabled or not\n\n  const [alert, setalert] = useState(null);\n\n  const showalert = (messsage, type) => {\n    setalert({\n      msg: messsage,\n      type: type\n    })\n\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#6f89b0';\n      showalert(\"Dark mode is enable\", \"success\");\n      document.title = \"TextUtils - Darkmode\";\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert(\"Light mode is enable\", \"success\");\n      document.title = \"TextUtils - Lightmode\";\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar title=\"TextUtils\" abouttext=\"About\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      {/* <Routes> */}\n\n        {/* <Route path=\"/\" element={ <TextForm heading=\"Enter the taxt to analyze below\" showalert={showalert} mode={mode} />}/> */}\n        <TextForm heading=\"Enter the taxt to analyze below\" showalert={showalert} mode={mode} />\n        {/* <Route path=\"/about\" element={<About />}/> */}\n\n      {/* </Routes> */}\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}